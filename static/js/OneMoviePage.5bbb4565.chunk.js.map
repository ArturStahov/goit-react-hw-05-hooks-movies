{"version":3,"sources":["img/default-image.jpg","service/createImgUrl.js","components/Section/styledComponent.js","components/Section/Section.jsx","components/OneMovieDetails/styledComponent.js","components/OneMovieDetails/OneMovieDetails.jsx","components/CastBlock/styledComponent.js","components/CastBlock/CastBlock.jsx","service/fetchCast.js","components/ReviewsBlock/styledComponent.js","components/ReviewsBlock/ReviewsBlock.jsx","service/fetchReview.js","views/OneMoviePage/OneMoviePage.js","service/fetchOneMovies.js"],"names":["createImgUrl","patch","Section","styled","section","Sections","children","ButtonBack","div","Container","PosterImg","img","ContentBox","Title","h2","DateRelease","p","MovieGenresList","ul","MovieGenresItem","li","MovieDescription","NavList","NavItem","NavContainer","TitleNav","h3","OneMovieDetail","movie","original_title","poster_path","release_date","overview","genres","url","useRouteMatch","state","useLocation","setIdItem","useContext","FilmReturnContext","useEffect","id","src","DefaultImage","alt","className","to","map","name","activeClassName","ListCast","CastItem","CastImage","CastBlocks","useState","cast","setCast","movieID","useParams","axios","get","then","response","data","fetchCast","profile_path","ListReview","ReviewItem","ReviewBlocks","review","setReview","fetchReview","results","length","author","content","OneMoviesPage","setMovie","path","fetchOneMovies","exact"],"mappings":"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","file":"static/js/OneMoviePage.5bbb4565.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default-image.2e01288c.jpg\";","const createImgUrl = patch => {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n  return `${BASE_IMG_URL}${patch}`;\n};\n\nexport default createImgUrl;\n","import styled from 'styled-components';\n\nconst Section = styled.section`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nexport { Section };\n","import React from 'react';\nimport { Section } from './styledComponent';\n\nexport default function Sections({ children }) {\n  return <Section>{children}</Section>;\n}\n","import styled from 'styled-components';\n\nconst ButtonBack = styled.div`\n  margin-bottom: 25px;\n  display: block;\n\n  & > .link {\n    padding: 5px 10px;\n    color: #200772;\n    font-weight: 700;\n    border: 4px double grey;\n    border-radius: 2rem;\n  }\n`;\nconst Container = styled.div`\n  padding-bottom: 50px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst PosterImg = styled.img`\n  max-width: 400px;\n  margin-right: 20px;\n`;\nconst ContentBox = styled.div`\n  padding-top: 30px;\n  max-width: 500px;\n`;\nconst Title = styled.h2`\n  font-size: 1.4rem;\n  color: #6a48d7;\n  margin-bottom: 10px;\n  text-shadow: 0 0 6px rgba(202, 228, 225, 0.92),\n    0 0 30px rgba(202, 228, 225, 0.34), 0 0 12px rgba(30, 132, 242, 0.52),\n    0 0 21px rgba(30, 132, 242, 0.92), 0 0 34px rgba(30, 132, 242, 0.78),\n    0 0 54px rgba(30, 132, 242, 0.92);\n`;\n\nconst DateRelease = styled.p`\n  font-size: 1rem;\n  color: #ffaa00;\n  margin-bottom: 10px;\n`;\n\nconst MovieGenresList = styled.ul`\n  margin-bottom: 40px;\n`;\nconst MovieGenresItem = styled.li`\n  font-size: 1rem;\n  color: #ffaa00;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nconst MovieDescription = styled.p`\n  font-size: 1rem;\n  color: #06266f;\n  margin-bottom: 40px;\n`;\n\nconst NavList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 300px;\n`;\nconst NavItem = styled.li`\n  & > .link {\n    padding: 5px 10px;\n    color: #200772;\n    font-weight: 700;\n    border: 4px double grey;\n    border-radius: 2rem;\n  }\n  & > .selected {\n    color: #ff7400;\n  }\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nconst NavContainer = styled.div`\n  padding-top: 50px;\n  margin: 0 auto;\n`;\nconst TitleNav = styled.h3`\n  font-size: 1.3 rem;\n  font-weight: 600;\n  color: #6a48d7;\n  margin-bottom: 25px;\n`;\n\nexport {\n  ButtonBack,\n  TitleNav,\n  NavContainer,\n  NavItem,\n  NavList,\n  MovieDescription,\n  MovieGenresItem,\n  MovieGenresList,\n  DateRelease,\n  Title,\n  ContentBox,\n  PosterImg,\n  Container,\n};\n","import { useEffect, useContext } from 'react';\nimport { useLocation, useRouteMatch } from 'react-router-dom';\nimport {\n  ButtonBack,\n  MovieDescription,\n  MovieGenresItem,\n  MovieGenresList,\n  DateRelease,\n  Title,\n  ContentBox,\n  PosterImg,\n  Container,\n  NavList,\n  NavItem,\n  NavContainer,\n  TitleNav,\n} from './styledComponent';\nimport createImgUrl from '../../service/createImgUrl';\nimport { NavLink } from 'react-router-dom';\nimport DefaultImage from '../../img/default-image.jpg';\nimport FilmReturnContext from '../../service/context';\n\nexport default function OneMovieDetail({\n  movie: { original_title, poster_path, release_date, overview, genres },\n}) {\n  const { url } = useRouteMatch();\n  const { state } = useLocation();\n  const { setIdItem } = useContext(FilmReturnContext);\n\n  //кешируем ид выбраного итема\n  useEffect(() => {\n    if (state) {\n      setIdItem(state.id);\n    }\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <PosterImg\n          src={poster_path ? createImgUrl(poster_path) : DefaultImage}\n          alt={original_title}\n        />\n        <ContentBox>\n          <ButtonBack>\n            <NavLink className=\"link\" to={state ? state.url : '/'}>\n              Back\n            </NavLink>\n          </ButtonBack>\n\n          <Title>{original_title}</Title>\n          <DateRelease>Release: {release_date}</DateRelease>\n          <MovieGenresList>\n            {genres.map(({ id, name }) => (\n              <MovieGenresItem key={id}>{name}</MovieGenresItem>\n            ))}\n          </MovieGenresList>\n\n          <MovieDescription>{overview}</MovieDescription>\n          <NavContainer>\n            <TitleNav>Additional Information</TitleNav>\n            <NavList>\n              <NavItem>\n                <NavLink\n                  className=\"link\"\n                  activeClassName=\"selected\"\n                  to={`${url}/cast`}\n                >\n                  Cast\n                </NavLink>\n              </NavItem>\n\n              <NavItem>\n                <NavLink\n                  className=\"link\"\n                  activeClassName=\"selected\"\n                  to={`${url}/reviews`}\n                >\n                  Reviews\n                </NavLink>\n              </NavItem>\n            </NavList>\n          </NavContainer>\n        </ContentBox>\n      </Container>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nconst ListCast = styled.ul`\n  padding-top: 50px;\n  max-width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\nconst CastItem = styled.li`\n  max-width: 150px;\n  margin-bottom: 20px;\n`;\nconst CastImage = styled.img`\n  height: 200px;\n`;\n\nexport { ListCast, CastItem, CastImage };\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchCast from '../../service/fetchCast';\nimport createImgUrl from '../../service/createImgUrl';\nimport DefaultImage from '../../img/default-image.jpg';\nimport { ListCast, CastItem, CastImage } from './styledComponent';\n\nexport default function CastBlocks() {\n  const [cast, setCast] = useState(null);\n  const { movieID } = useParams();\n\n  useEffect(() => {\n    fetchCast(movieID).then(data => setCast(data.cast));\n  });\n\n  return (\n    <>\n      {cast && (\n        <ListCast>\n          {cast.map(({ name, profile_path, id }) => (\n            <CastItem key={id}>\n              <h3>{name}</h3>\n              <CastImage\n                src={profile_path ? createImgUrl(profile_path) : DefaultImage}\n                alt={name}\n              />\n            </CastItem>\n          ))}\n        </ListCast>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '81f248d3c9154788229a5419bb33091a';\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\n\nexport default function fetchCast(movieID) {\n  return axios\n    .get(`${BASE_URL}${movieID}/credits?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n}\n\n//https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n","import styled from 'styled-components';\n\nconst ListReview = styled.ul`\n  padding-top: 50px;\n  max-width: 800px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\nconst ReviewItem = styled.li`\n  max-width: 500px;\n  margin-bottom: 20px;\n`;\n\nexport { ReviewItem, ListReview };\n","import { useState, useEffect } from 'react';\nimport fetchReview from '../../service/fetchReview';\nimport { ReviewItem, ListReview } from './styledComponent';\nimport { useParams } from 'react-router-dom';\n\nexport default function ReviewBlocks() {\n  const [review, setReview] = useState([]);\n  const { movieID } = useParams();\n\n  useEffect(() => {\n    fetchReview(movieID).then(data => setReview(data.results));\n  });\n\n  return (\n    <>\n      {review.length > 0 ? (\n        <ListReview>\n          {review.map(({ author, content, id }) => (\n            <ReviewItem key={id}>\n              <h3>author: {author}</h3>\n              <p>{content}</p>\n            </ReviewItem>\n          ))}\n        </ListReview>\n      ) : (\n        <p>No Reviews</p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '81f248d3c9154788229a5419bb33091a';\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\n\nexport default function fetchApiPopular(movieID) {\n  return axios\n    .get(\n      `${BASE_URL}${movieID}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    )\n    .then(response => response.data);\n}\n//https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\n","import { useState, useEffect } from 'react';\nimport fetchOneMovies from '../../service/fetchOneMovies';\nimport Section from '../../components/Section/Section';\nimport OneMovieDetails from '../../components/OneMovieDetails/OneMovieDetails';\nimport CastBlock from '../../components/CastBlock/CastBlock';\nimport ReviewsBlocks from '../../components/ReviewsBlock/ReviewsBlock';\nimport { Route, useParams, useRouteMatch } from 'react-router-dom';\n\nexport default function OneMoviesPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieID } = useParams();\n  const { path } = useRouteMatch();\n\n  useEffect(() => {\n    fetchOneMovies(movieID).then(data => setMovie(data));\n  }, []);\n\n  return (\n    <>\n      <Section>{movie && <OneMovieDetails movie={movie} />}</Section>\n      <Section>\n        {movie && (\n          <Route exact path={`${path}/cast`}>\n            <CastBlock />\n          </Route>\n        )}\n        {movie && (\n          <Route exact path={`${path}/reviews`}>\n            <ReviewsBlocks />\n          </Route>\n        )}\n      </Section>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '81f248d3c9154788229a5419bb33091a';\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\n\nexport default function fetchApiPopular(movieID) {\n  return axios\n    .get(`${BASE_URL}${movieID}?api_key=${API_KEY}&language=en-US`)\n    .then(response => response.data);\n}\n\n//https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n"],"sourceRoot":""}