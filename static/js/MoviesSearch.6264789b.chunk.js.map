{"version":3,"sources":["img/default-image.jpg","service/createImgUrl.js","components/MoviesList/styledComponent.js","components/MoviesList/MoviesList.jsx","components/MovieSearch/FormSearch/StyledComponent.js","components/MovieSearch/FormSearch/FormSearch.jsx","components/PaginationViews/StyledComponent.js","components/PaginationViews/PaginationViews.jsx","components/MovieSearch/MovieSearch.jsx","service/fetchApiSearch.js"],"names":["createImgUrl","patch","List","styled","ul","ListItem","li","Image","img","Title","h2","Overlay","div","ReleaseData","p","MovieList","films","url","useRouteMatch","map","id","original_title","poster_path","release_date","to","pathname","state","data-type","slice","src","DefaultImg","alt","SearchBlock","form","Input","input","Button","button","FormSearch","onSubmit","useState","searchInput","setSearchInput","e","preventDefault","value","type","placeholder","onChange","target","Container","PaginationViews","length","onHandlerChange","activePage","defaultCurrent","total","defaultPageSize","pageNumber","showSizeChanger","MoviesSearch","setFilms","query","setQuery","page","setPage","dataTotal","setDataTotal","useContext","FilmReturnContext","querySearch","isFromDataState","onClearState","addOnState","idItem","totalPage","useEffect","selector","document","querySelector","scrollIntoView","fetchApi","axios","get","then","response","data","fetchApiSearch","total_results","results","queryInput","trim","MoviesList"],"mappings":"0JAAe,QAA0B,2C,iCCK1BA,IALM,SAAAC,GAEnB,MAAM,GAAN,OADqB,oCACrB,OAAyBA,K,09CCA3B,IAAMC,EAAOC,IAAOC,GAAV,KAOJC,EAAWF,IAAOG,GAAV,KAMRC,EAAQJ,IAAOK,IAAV,KAKLC,EAAQN,IAAOO,GAAV,KAeLC,EAAUR,IAAOS,IAAV,KAQPC,EAAcV,IAAOW,EAAV,K,kBC5BF,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC1BC,EAAQC,cAARD,IAER,OACE,cAACf,EAAD,UACGc,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,aAApC,OACT,cAAC,IAAD,CAEEC,GAAI,CACFC,SAAS,UAAD,OAAYL,GACpBM,MAAO,CAAET,MAAKG,OAJlB,SAOE,eAACf,EAAD,CAAUsB,YAAWP,EAArB,UACE,eAACT,EAAD,WACE,cAACF,EAAD,UAAQY,IACR,cAACR,EAAD,UACGU,EAAeA,EAAaK,MAAM,EAAG,GAAK,eAG/C,cAACrB,EAAD,CACEsB,IAAKP,EAActB,YAAasB,GAAeQ,IAC/CC,IAAKV,QAfJD,U,w3BCpBf,IAAMY,EAAc7B,IAAO8B,KAAV,KAMXC,EAAQ/B,IAAOgC,MAAV,KAaLC,EAASjC,IAAOkC,OAAV,KClBG,SAASC,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAAY,EACTC,mBAAS,IADA,mBACxCC,EADwC,KAC3BC,EAD2B,KAe/C,OACE,eAACV,EAAD,CAAaO,SAPO,SAAAI,GACpBA,EAAEC,iBACFL,EAASE,GACTC,EAAe,KAIf,UACE,cAACR,EAAD,CACEW,MAAOJ,EACPK,KAAK,OACLC,YAAY,cACZC,SAlBe,SAAAL,GAAM,IACjBE,EAAUF,EAAEM,OAAZJ,MAERH,EAAeG,MAiBb,cAACT,EAAD,CAAQU,KAAK,SAAb,kB,4pDCxBN,IAAMI,EAAY/C,IAAOS,IAAV,KCCA,SAASuC,EAAT,GAIX,IAHFC,EAGC,EAHDA,OACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,WAEA,OACE,cAACJ,EAAD,UACE,cAAC,IAAD,CACEK,eAAgBD,EAChBE,MAAOJ,EACPK,gBAAiB,GACjBT,SAAU,SAAAU,GAAU,OAAIL,EAAgBK,IACxCC,iBAAiB,MCPV,SAASC,IAAgB,IAAD,EACXpB,mBAAS,IADE,mBAC9BxB,EAD8B,KACvB6C,EADuB,OAEXrB,mBAAS,IAFE,mBAE9BsB,EAF8B,KAEvBC,EAFuB,OAGbvB,mBAAS,GAHI,mBAG9BwB,EAH8B,KAGxBC,EAHwB,OAIHzB,mBAAS,GAJN,mBAI9B0B,EAJ8B,KAInBC,EAJmB,OAajCC,qBAAWC,KAPbC,EANmC,EAMnCA,YACAZ,EAPmC,EAOnCA,WACAa,EARmC,EAQnCA,gBACAC,EATmC,EASnCA,aACAC,EAVmC,EAUnCA,WACAC,EAXmC,EAWnCA,OACAC,EAZmC,EAYnCA,UAIFC,qBAAU,WACHL,IAGLR,EAASO,GACTL,EAAQP,GACRS,EAAaQ,MACZ,IAGHC,qBAAU,WACR,GAAKL,GAGDG,GAAU1D,EAAMoC,OAAS,EAAG,CAC9B,IAAMyB,EAAQ,sBAAkBH,EAAlB,MACGI,SAASC,cAAcF,GAC/BG,gBAAe,MAEzB,CAAChE,IAGJ4D,qBAAU,WACJ5D,EAAMoC,OAAS,GACjBqB,EAAWX,EAAOE,EAAME,KAEzB,CAAClD,EAAO8C,EAAOE,IAElB,IAAMiB,EAAW,YC/CJ,SAAwBnB,EAAOE,GAC5C,OAAOkB,IACJC,IADI,UAHQ,6CAGR,mBAJO,mCAIP,iCAEmDrB,EAFnD,iBAEiEE,EAFjE,yBAIJoB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SD2C3BC,CAAezB,EAAOE,GAAMoB,MAAK,SAAAE,GAC3BtE,EAAMoC,OAASkC,EAAKE,gBACtB3B,EAASyB,EAAKG,SACdtB,EAAamB,EAAKE,oBAKxBZ,qBAAU,WACHd,GAGLmB,MACC,CAACnB,EAAOE,IAoBX,OACE,qCACE,cAAC1B,EAAD,CAAYC,SApBY,SAAAmD,GACrBA,EAAWC,QAGZD,IAAe5B,IAGnBU,IACAX,EAAS,IACTI,EAAQ,GACRF,EAAS2B,OAWN1E,EAAMoC,OAAS,GAAK,cAACwC,EAAA,EAAD,CAAY5E,MAAOA,IACvCA,EAAMoC,OAAS,GACd,cAACD,EAAD,CACEE,gBAXkB,SAAAW,GACxBC,EAAQD,GACRQ,KAUMpB,OAAQc,EACRZ,WAAYU","file":"static/js/MoviesSearch.6264789b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default-image.2e01288c.jpg\";","const createImgUrl = patch => {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n  return `${BASE_IMG_URL}${patch}`;\n};\n\nexport default createImgUrl;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  max-width: 1000px;\n  margin: 0 auto 50px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst ListItem = styled.li`\n  position: relative;\n  max-width: 400px;\n  height: 500px;\n  margin-bottom: 20px;\n`;\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\nconst Title = styled.h2`\n  text-align: center;\n  font-size: 1.6rem;\n  color: #fff;\n  font-weight: 800;\n  position: absolute;\n  left: 50%;\n  bottom: 5%;\n  transform: translateX(-50%);\n  text-shadow: 0 0 6px rgba(202, 228, 225, 0.92),\n    0 0 30px rgba(202, 228, 225, 0.34), 0 0 12px rgba(30, 132, 242, 0.52),\n    0 0 21px rgba(30, 132, 242, 0.92), 0 0 34px rgba(30, 132, 242, 0.78),\n    0 0 54px rgba(30, 132, 242, 0.92);\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\nconst ReleaseData = styled.p`\n  text-align: center;\n  font-size: 1.6rem;\n  color: #ffdf40;\n  font-weight: 800;\n  position: absolute;\n  left: 50%;\n  bottom: 0;\n  transform: translateX(-50%);\n`;\n\nexport { ReleaseData, Overlay, Title, Image, ListItem, List };\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport { NavLink } from 'react-router-dom';\nimport {\n  ReleaseData,\n  Overlay,\n  Title,\n  Image,\n  ListItem,\n  List,\n} from './styledComponent';\nimport DefaultImg from '../../img/default-image.jpg';\nimport createImgUrl from '../../service/createImgUrl';\n\nexport default function MovieList({ films }) {\n  const { url } = useRouteMatch();\n\n  return (\n    <List>\n      {films.map(({ id, original_title, poster_path, release_date }) => (\n        <NavLink\n          key={id}\n          to={{\n            pathname: `movies/${id}`,\n            state: { url, id },\n          }}\n        >\n          <ListItem data-type={id}>\n            <Overlay>\n              <Title>{original_title}</Title>\n              <ReleaseData>\n                {release_date ? release_date.slice(0, 4) : 'no date'}\n              </ReleaseData>\n            </Overlay>\n            <Image\n              src={poster_path ? createImgUrl(poster_path) : DefaultImg}\n              alt={original_title}\n            />\n          </ListItem>\n        </NavLink>\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nconst SearchBlock = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: baseline;\n  margin-bottom: 40px;\n`;\nconst Input = styled.input`\n  width: 300px;\n  height: 30px;\n  border: 2px solid grey;\n  border-radius: 1rem;\n  padding-left: 10px;\n  outline: none;\n  margin-right: 10px;\n  caret-color: #ff9200;\n  &:focus {\n    box-shadow: inset 4px 4px 5px 0px rgba(0, 0, 0, 0.75);\n  }\n`;\nconst Button = styled.button`\n  width: 40px;\n  height: 40px;\n  border: 4px double #000000;\n  border-radius: 50%;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: #ff4040;\n  }\n`;\n\nexport { Button, Input, SearchBlock };\n","import { Button, Input, SearchBlock } from './StyledComponent';\nimport { useState } from 'react';\n\nexport default function FormSearch({ onSubmit }) {\n  const [searchInput, setSearchInput] = useState('');\n\n  const handlerInput = e => {\n    const { value } = e.target;\n\n    setSearchInput(value);\n  };\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchInput);\n    setSearchInput('');\n  };\n\n  return (\n    <SearchBlock onSubmit={handlerSubmit}>\n      <Input\n        value={searchInput}\n        type=\"text\"\n        placeholder=\"input query\"\n        onChange={handlerInput}\n      />\n      <Button type=\"submit\">S</Button>\n    </SearchBlock>\n  );\n}\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  max-width: 500px;\n  margin: 0 auto;\n  & .ant-pagination {\n    display: flex;\n    justify-content: center;\n  }\n  & .ant-pagination-prev {\n    min-width: 30px;\n    height: 30px;\n    .ant-pagination-item-link {\n      background-color: #df8938;\n      border: 2px solid #ffffff;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      transition-property: box-shadow;\n      transition-duration: 0.4s;\n      &:hover {\n        box-shadow: 2px 3px 10px 2px rgba(54, 187, 255, 0.69);\n      }\n      & .ant-pagination-disabled {\n        background-color: #897c7c;\n      }\n    }\n  }\n  & .ant-pagination-next {\n    min-width: 30px;\n    height: 30px;\n    .ant-pagination-item-link {\n      background-color: #df8938;\n      border: 2px solid #ffffff;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      transition-property: box-shadow;\n      transition-duration: 0.4s;\n      &:hover {\n        box-shadow: 2px 3px 10px 2px rgba(54, 187, 255, 0.69);\n      }\n    }\n  }\n  & .ant-pagination-item {\n    min-width: 30px;\n    height: 30px;\n    background-color: #df8938;\n    border: 2px solid #ffffff;\n\n    transition-property: transform;\n    font-size: 1.4rem;\n    font-weight: 700;\n    transition-duration: 0.4s;\n    &:hover,\n    :focus {\n      transform: scale(1.1);\n      border: 2px solid #df3838;\n    }\n    & > a {\n      color: #ffffff;\n    }\n  }\n  & .ant-pagination-item-active {\n    transform: scale(1.1);\n    border: 2px solid #df3838;\n    & > a {\n      color: #df3838;\n    }\n  }\n`;\n\nexport { Container };\n","import { Pagination } from 'antd';\nimport { Container } from './StyledComponent';\n\nexport default function PaginationViews({\n  length,\n  onHandlerChange,\n  activePage,\n}) {\n  return (\n    <Container>\n      <Pagination\n        defaultCurrent={activePage}\n        total={length}\n        defaultPageSize={20}\n        onChange={pageNumber => onHandlerChange(pageNumber)}\n        showSizeChanger={false}\n      />\n    </Container>\n  );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport fetchApiSearch from '../../service/fetchApiSearch';\nimport MoviesList from '../MoviesList/MoviesList';\nimport FormSearch from './FormSearch/FormSearch';\n\nimport FilmReturnContext from '../../service/context';\nimport PaginationViews from '../PaginationViews/PaginationViews';\n\nexport default function MoviesSearch() {\n  const [films, setFilms] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [dataTotal, setDataTotal] = useState(1);\n  const {\n    querySearch,\n    pageNumber,\n    isFromDataState,\n    onClearState,\n    addOnState,\n    idItem,\n    totalPage,\n  } = useContext(FilmReturnContext);\n\n  //берем данные с кеша\n  useEffect(() => {\n    if (!isFromDataState) {\n      return;\n    }\n    setQuery(querySearch);\n    setPage(pageNumber);\n    setDataTotal(totalPage);\n  }, []);\n\n  //возврат к просмотренному фильму\n  useEffect(() => {\n    if (!isFromDataState) {\n      return;\n    }\n    if (idItem && films.length > 0) {\n      const selector = `[data-type=\"${idItem}\"]`;\n      const viewItem = document.querySelector(selector);\n      viewItem.scrollIntoView(false);\n    }\n  }, [films]);\n\n  //кешируем данные\n  useEffect(() => {\n    if (films.length > 0) {\n      addOnState(query, page, dataTotal);\n    }\n  }, [films, query, page]);\n\n  const fetchApi = () => {\n    fetchApiSearch(query, page).then(data => {\n      if (films.length < data.total_results) {\n        setFilms(data.results);\n        setDataTotal(data.total_results);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchApi();\n  }, [query, page]);\n\n  const handlerSearchButton = queryInput => {\n    if (!queryInput.trim()) {\n      return;\n    }\n    if (queryInput === query) {\n      return;\n    }\n    onClearState();\n    setFilms([]);\n    setPage(1);\n    setQuery(queryInput);\n  };\n\n  const handlerPagination = page => {\n    setPage(page);\n    onClearState();\n  };\n\n  return (\n    <>\n      <FormSearch onSubmit={handlerSearchButton} />\n      {films.length > 0 && <MoviesList films={films} />}\n      {films.length > 0 && (\n        <PaginationViews\n          onHandlerChange={handlerPagination}\n          length={dataTotal}\n          activePage={page}\n        />\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '81f248d3c9154788229a5419bb33091a';\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie?';\n\nexport default function fetchApiSearch(query, page) {\n  return axios\n    .get(\n      `${BASE_URL}api_key=${API_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n    )\n    .then(response => response.data);\n}\n\n//https://api.themoviedb.org/3/search/movie?api_key=81f248d3c9154788229a5419bb33091a&language=en-US&query=strong&page=1&include_adult=false\n"],"sourceRoot":""}