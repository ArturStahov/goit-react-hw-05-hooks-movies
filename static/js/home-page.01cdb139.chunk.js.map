{"version":3,"sources":["img/default-image.jpg","service/createImgUrl.js","components/MoviesList/styledComponent.js","components/MoviesList/MoviesList.jsx","views/HomePage/StyledComponent.js","views/HomePage/HomePage.js","service/fetchApiPopular.js"],"names":["createImgUrl","patch","List","styled","ul","ListItem","li","Image","img","Title","h2","Overlay","div","ReleaseData","p","MovieList","films","url","useRouteMatch","map","id","original_title","poster_path","release_date","to","pathname","state","data-type","slice","src","DefaultImg","alt","HomePage","useState","setFilms","page","useEffect","fetchApi","axios","get","then","response","data","fetchApiPopular","length","total_results","results","MoviesList"],"mappings":"0JAAe,QAA0B,2C,iCCK1BA,IALM,SAAAC,GAEnB,MAAM,GAAN,OADqB,oCACrB,OAAyBA,K,09CCA3B,IAAMC,EAAOC,IAAOC,GAAV,KAOJC,EAAWF,IAAOG,GAAV,KAMRC,EAAQJ,IAAOK,IAAV,KAKLC,EAAQN,IAAOO,GAAV,KAeLC,EAAUR,IAAOS,IAAV,KAQPC,EAAcV,IAAOW,EAAV,K,kBC5BF,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC1BC,EAAQC,cAARD,IAER,OACE,cAACf,EAAD,UACGc,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,aAApC,OACT,cAAC,IAAD,CAEEC,GAAI,CACFC,SAAS,UAAD,OAAYL,GACpBM,MAAO,CAAET,MAAKG,OAJlB,SAOE,eAACf,EAAD,CAAUsB,YAAWP,EAArB,UACE,eAACT,EAAD,WACE,cAACF,EAAD,UAAQY,IACR,cAACR,EAAD,UACGU,EAAeA,EAAaK,MAAM,EAAG,GAAK,eAG/C,cAACrB,EAAD,CACEsB,IAAKP,EAActB,YAAasB,GAAeQ,IAC/CC,IAAKV,QAfJD,U,+TCpBf,IAAMX,E,MAAQN,EAAOO,GAAV,KCGI,SAASsB,IAAY,IAAD,EACPC,mBAAS,IADF,mBAC1BjB,EAD0B,KACnBkB,EADmB,OAETD,mBAAS,GAFA,mBAE1BE,EAF0B,UAIjCC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAW,YCRJ,SAAyBF,GACtC,OAAOG,IACJC,IADI,UAHQ,gCAGR,iCAJO,mCAIP,gCAEgEJ,IAEpEK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SDI3BC,CAAgBR,GAAMK,MAAK,SAAAE,GACrB1B,EAAM4B,OAASF,EAAKG,eACtBX,EAASQ,EAAKI,aAKpB,OACE,qCACE,cAACrC,EAAD,wBACCO,EAAM4B,OAAS,GAAK,cAACG,EAAA,EAAD,CAAY/B,MAAOA","file":"static/js/home-page.01cdb139.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/default-image.2e01288c.jpg\";","const createImgUrl = patch => {\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n  return `${BASE_IMG_URL}${patch}`;\n};\n\nexport default createImgUrl;\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n  max-width: 1000px;\n  margin: 0 auto 50px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\nconst ListItem = styled.li`\n  position: relative;\n  max-width: 400px;\n  height: 500px;\n  margin-bottom: 20px;\n`;\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\nconst Title = styled.h2`\n  text-align: center;\n  font-size: 1.6rem;\n  color: #fff;\n  font-weight: 800;\n  position: absolute;\n  left: 50%;\n  bottom: 5%;\n  transform: translateX(-50%);\n  text-shadow: 0 0 6px rgba(202, 228, 225, 0.92),\n    0 0 30px rgba(202, 228, 225, 0.34), 0 0 12px rgba(30, 132, 242, 0.52),\n    0 0 21px rgba(30, 132, 242, 0.92), 0 0 34px rgba(30, 132, 242, 0.78),\n    0 0 54px rgba(30, 132, 242, 0.92);\n`;\n\nconst Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\nconst ReleaseData = styled.p`\n  text-align: center;\n  font-size: 1.6rem;\n  color: #ffdf40;\n  font-weight: 800;\n  position: absolute;\n  left: 50%;\n  bottom: 0;\n  transform: translateX(-50%);\n`;\n\nexport { ReleaseData, Overlay, Title, Image, ListItem, List };\n","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nimport { NavLink } from 'react-router-dom';\nimport {\n  ReleaseData,\n  Overlay,\n  Title,\n  Image,\n  ListItem,\n  List,\n} from './styledComponent';\nimport DefaultImg from '../../img/default-image.jpg';\nimport createImgUrl from '../../service/createImgUrl';\n\nexport default function MovieList({ films }) {\n  const { url } = useRouteMatch();\n\n  return (\n    <List>\n      {films.map(({ id, original_title, poster_path, release_date }) => (\n        <NavLink\n          key={id}\n          to={{\n            pathname: `movies/${id}`,\n            state: { url, id },\n          }}\n        >\n          <ListItem data-type={id}>\n            <Overlay>\n              <Title>{original_title}</Title>\n              <ReleaseData>\n                {release_date ? release_date.slice(0, 4) : 'no date'}\n              </ReleaseData>\n            </Overlay>\n            <Image\n              src={poster_path ? createImgUrl(poster_path) : DefaultImg}\n              alt={original_title}\n            />\n          </ListItem>\n        </NavLink>\n      ))}\n    </List>\n  );\n}\n","import styled from 'styled-components';\n\nconst Title = styled.h2`\n  font-size: 2rem;\n  font-weight: 700;\n  text-align: center;\n  color: #000;\n  margin-bottom: 30px;\n`;\n\nexport { Title };\n","import { useState, useEffect } from 'react';\nimport fetchApiPopular from '../../service/fetchApiPopular';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { Title } from './StyledComponent';\n\nexport default function HomePage() {\n  const [films, setFilms] = useState([]);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  const fetchApi = () => {\n    fetchApiPopular(page).then(data => {\n      if (films.length < data.total_results) {\n        setFilms(data.results);\n      }\n    });\n  };\n\n  return (\n    <>\n      <Title>Top rates</Title>\n      {films.length > 0 && <MoviesList films={films} />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '81f248d3c9154788229a5419bb33091a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport default function fetchApiPopular(page) {\n  return axios\n    .get(\n      `${BASE_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`,\n    )\n    .then(response => response.data);\n}\n\n//${BASE_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1\n"],"sourceRoot":""}